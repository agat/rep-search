{"version":3,"sources":["components/Table/THeader/THeader.module.css","components/Table/Formatters/Boolean/Boolean.module.css","components/Table/Formatters/Number/Number.module.css","components/Row/Row.module.css","components/Table/Formatters/Link/Link.module.css","components/Table/Formatters/Text/Text.module.css","components/Typography/Headline/Headline.module.css","components/Input/Input.module.css","components/Button/Button.module.css","components/Table/Table.module.css","containers/app/App.module.css","reducer/actions.ts","api/index.ts","reducer/actionUtils.ts","reducer/index.ts","components/Row/index.tsx","components/Typography/Headline/index.tsx","components/Input/index.tsx","components/Button/index.tsx","components/Table/index.tsx","components/Table/THeader/index.tsx","components/Table/Formatters/Link/index.tsx","components/Table/Formatters/Boolean/index.tsx","components/Table/Formatters/Number/index.tsx","components/Table/Formatters/Text/index.tsx","containers/app/SearchResultTable/index.tsx","containers/app/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","th","arrow","clearSorting","boolean","booleanPositive","booleanNegative","number","numberPositive","numberNegative","row","rowCentered","link","body","text","headline","input","button","table","app","actions","type","sort","order","query","repositories","totalCount","searchRepositories","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","params","result","wrap","_context","prev","next","per_page","fetch","concat","queryString","stringify","then","response","json","sent","abrupt","stop","_x","apply","this","arguments","actionUtils","search","dispatch","trim","q","page","items","total_count","_x2","_x3","_x4","loadMore","_ref2","_callee2","state","_context2","_x5","_x6","SearchInitialState","isFetching","reducer","action","objectSpread","toConsumableArray","React","memo","isCentered","props","objectWithoutProperties","react_default","createElement","assign","className","cx","styles","defineProperty","children","Input","forwardRef","ref","orderArrow","desc","asc","THeader","id","onChangeSort","handleClick","useCallback","newSort","newOrder","handleClearClick","e","stopPropagation","onClick","Fragment","_cx","val","numeral","format","components_Table","Table_THeader","data-th-name","map","stargazers_count","name","open_issues_count","has_wiki","forks_count","html_url","description","key","Formatters_Number","Formatters_Link","href","data-hidden-on-small-screen","Formatters_Boolean","Formatters_Text","handleQueryBlurEvent","inputRef","value","App","_useLocalStorageReduc","useLocalStorageReducer","_useLocalStorageReduc2","slicedToArray","useRef","handleFormSubmit","preventDefault","current","handleInputBlur","hadnleLoadMoreClick","handleSortChange","components_Row","Typography_Headline","onSubmit","components_Input","defaultValue","onBlur","placeholder","hidden","length","app_SearchResultTable","components_Button","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbe442a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"th\":\"THeader_th__Oi8tm\",\"arrow\":\"THeader_arrow__3UVc7\",\"clearSorting\":\"THeader_clearSorting__2PO01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boolean\":\"Boolean_boolean__3HJhs\",\"booleanPositive\":\"Boolean_booleanPositive__3u0bP\",\"booleanNegative\":\"Boolean_booleanNegative__x3SDq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"Number_number__2AiRU\",\"numberPositive\":\"Number_numberPositive__2qL8E\",\"numberNegative\":\"Number_numberNegative__2-8tU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__2iFJs\",\"rowCentered\":\"Row_rowCentered__csar3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__uGcbM\",\"body\":\"Link_body__1BmHY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__3zfuY\",\"body\":\"Text_body__RnJn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"Headline_headline__3WQUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3cVv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2JSts\"};","import {\n    RepositoryI,\n    SortT,\n    OrderT\n} from './index';\n\n\nexport type ClearActionT = {\n    type: 'CLEAR'\n};\n\nexport const clear = (): ActionT => ({\n    type: 'CLEAR'\n});\n\n\nexport type ChangeSortingActionT = {\n    type: 'CHANGE_SORTING',\n    sort: SortT,\n    order: OrderT\n};\n\nexport const changeSorting = (sort: SortT, order: OrderT): ActionT => ({\n    type: 'CHANGE_SORTING',\n    sort,\n    order\n});\n\n\nexport type ApiSearchRepositoryActionT = {\n    type: 'API_SEARCH',\n    query: string\n};\n\nexport const apiSearchRepository = (query: string): ActionT => ({\n    type: 'API_SEARCH',\n    query\n});\n\n\nexport type ApiSearchRepositorySuccessActionT = {\n    type: 'API_SEARCH__SUCCESS',\n    totalCount: number,\n    repositories: RepositoryI[]\n};\n\nexport const apiSearchRepositorySuccess = (repositories: RepositoryI[], totalCount: number): ActionT => ({\n    type: 'API_SEARCH__SUCCESS',\n    totalCount,\n    repositories\n});\n\n\nexport type ApiGetNextPageActionT = {\n    type: 'API_GET_NEXT'\n};\n\nexport const apiGetNextPage = (): ActionT => ({\n    type: 'API_GET_NEXT'\n});\n\n\nexport type ApiGetNextSuccessActionT = {\n    type: 'API_GET_NEXT__SUCCESS',\n    totalCount: number,\n    repositories: RepositoryI[]\n};\n\nexport const apiGetNextSuccess = (repositories: RepositoryI[], totalCount: number): ActionT => ({\n    type: 'API_GET_NEXT__SUCCESS',\n    totalCount,\n    repositories\n});\n\n\nexport type ApiFailActionT = {\n    type: 'API__FAIL'\n};\n\nexport const apiFail = (): ActionT => ({\n    type: 'API__FAIL'\n});\n\n\nexport type ActionT =\n    | ChangeSortingActionT\n    | ApiSearchRepositoryActionT\n    | ApiSearchRepositorySuccessActionT\n    | ClearActionT\n    | ApiGetNextPageActionT\n    | ApiGetNextSuccessActionT\n    | ApiFailActionT;\n\nexport default {\n    clear,\n    changeSorting,\n    apiSearchRepository,\n    apiSearchRepositorySuccess,\n    apiGetNextPage,\n    apiGetNextSuccess,\n    apiFail\n};\n","import queryString from 'query-string';\n\nimport {\n    RepositoryI,\n    SortT,\n    OrderT\n} from 'reducer';\n\ntype SearchParamsT = {\n    q: string,\n    sort: SortT,\n    order: OrderT,\n    page: number,\n    per_page?: number\n};\n\ntype SearchResultsT = {\n    items: RepositoryI[],\n    total_count: number\n};\n\nexport const searchRepositories = async (params: SearchParamsT) => {\n    params.per_page = 50;\n\n    const result: SearchResultsT = await fetch(`https://api.github.com/search/repositories?${queryString.stringify(params)}`)\n        .then(response => response.json());\n\n    return result;\n};\n","import actions from 'reducer/actions';\nimport { searchRepositories } from 'api';\nimport {\n    SearchStateI,\n    SortT,\n    OrderT\n} from 'reducer';\n\n\nconst search = async (query: string, sort: SortT, order: OrderT, dispatch: Function) => {\n    if (query.trim()) {\n        dispatch(actions.apiSearchRepository(query));\n\n        const result = await searchRepositories({\n            q: query,\n            sort,\n            order,\n            page: 1\n        });\n\n        if (result.items) {\n            dispatch(actions.apiSearchRepositorySuccess(result.items, result.total_count));\n        } else {\n            dispatch(actions.apiFail());\n        }\n    } else {\n        dispatch(actions.clear());\n    }\n};\n\nconst loadMore = async (dispatch: Function, state: SearchStateI) => {\n    dispatch(actions.apiGetNextPage());\n\n    const result = await searchRepositories({\n        q: state.query,\n        sort: state.sort,\n        order: state.order,\n        page: state.page + 1\n    });\n\n    if (result.items) {\n        dispatch(actions.apiGetNextSuccess(result.items, result.total_count));\n    } else {\n        dispatch(actions.apiFail());\n    }\n};\n\nexport default {\n    search,\n    loadMore\n};\n","import {\n    ActionT\n} from './actions';\n\nexport interface RepositoryI {\n    id: string\n    name: string\n    description: string\n    html_url: string\n    has_wiki: boolean\n    forks_count: number\n    open_issues_count: number\n    stargazers_count: number\n};\n\nexport type SortT = 'stars' | 'forks' | 'score';\nexport type OrderT = 'desc' | 'asc';\n\nexport interface SearchStateI {\n    query: string\n    page: number\n    sort: SortT,\n    order: OrderT,\n    totalCount: number\n    repositories: RepositoryI[]\n    isFetching: boolean\n}\n\nexport const SearchInitialState: SearchStateI = {\n    query: '',\n    page: 0,\n    sort: 'score',\n    order: 'desc',\n    totalCount: 0,\n    repositories: [],\n    isFetching: false\n}\n\nexport const reducer = (state: SearchStateI, action: ActionT): SearchStateI => {\n    switch (action.type) {\n        case 'CLEAR': {\n            return {\n                ...SearchInitialState\n            };\n        }\n        case 'CHANGE_SORTING': {\n            return {\n                ...state,\n                sort: action.sort,\n                order: action.order\n            };\n        }\n        case 'API_SEARCH': {\n            return {\n                ...state,\n                totalCount: 0,\n                query: action.query,\n                page: 1,\n                repositories: [],\n                isFetching: true\n            };\n        }\n        case 'API_GET_NEXT': {\n            return {\n                ...state,\n                page: state.page + 1,\n                isFetching: true\n            };\n        }\n        case 'API_GET_NEXT__SUCCESS':\n        case 'API_SEARCH__SUCCESS': {\n            return {\n                ...state,\n                totalCount: action.totalCount,\n                repositories: [\n                    ...state.repositories,\n                    ...action.repositories\n                ],\n                isFetching: false\n            };\n        }\n        case 'API__FAIL': {\n            return {\n                ...state,\n                isFetching: false\n            };\n        }\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport cx from 'classnames';\n\nimport styles from './Row.module.css';\n\n\ntype RowT = React.HTMLProps<HTMLDivElement> & {\n    isCentered?: boolean\n};\n\nconst Row = ({\n    isCentered,\n    ...props\n}: RowT) => (\n    <div\n        className={cx(styles.row, {\n            [styles.rowCentered]: isCentered\n        })}\n        {...props}\n    />\n);\n\nexport default React.memo<RowT>(Row);\n","import React from 'react';\n\nimport styles from './Headline.module.css';\n\n\ntype HeadlineT = React.HTMLProps<HTMLHeadingElement>;\n\nconst Headline = ({\n    children,\n    ...props\n}: HeadlineT) => (\n    <h2\n        className={styles.headline}\n        {...props}\n    >\n        {children}\n    </h2>\n);\n\nexport default React.memo<HeadlineT>(Headline);\n","import React from 'react';\n\nimport styles from './Input.module.css';\n\n\ntype RefT = HTMLInputElement;\n\ntype InputT = React.HTMLProps<HTMLInputElement>;\n\nconst Input = React.forwardRef<RefT, InputT>((props, ref) => (\n    <input\n        className={styles.input}\n        ref={ref}\n        {...props}\n    />\n));\n\nexport default Input;\n","import React from 'react';\n\nimport styles from './Button.module.css';\n\n\ntype ButtonT = React.HTMLProps<HTMLDivElement>;\n\nconst Button = ({\n    children,\n    ...props\n}: ButtonT) => (\n    <div\n        className={styles.button}\n        {...props}\n    >\n        {children}\n    </div>\n);\n\nexport default React.memo<ButtonT>(Button);\n","import React from 'react';\n\nimport styles from './Table.module.css';\n\n\ntype TableT = React.HTMLProps<HTMLTableElement>;\n\nconst Table = ({\n    children,\n    ...props\n}: TableT) => (\n    <table\n        className={styles.table}\n        {...props}\n    >\n        {children}\n    </table>\n);\n\nexport default React.memo<TableT>(Table);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback } from 'react';\n\nimport {\n    SortT,\n    OrderT\n} from 'reducer';\n\n\nimport styles from './THeader.module.css';\n\ntype THeaderT = React.HTMLProps<HTMLTableHeaderCellElement> & {\n    sort: SortT,\n    order: OrderT,\n    id: SortT,\n    onChangeSort: (sort: SortT, order: OrderT) => void\n};\n\nconst THeader = ({\n    children,\n    sort,\n    order,\n    id,\n    onChangeSort\n}: THeaderT) => {\n    const handleClick = useCallback(() => {\n        let newSort = sort;\n        let newOrder = order;\n\n        if (id === sort) {\n            if (order === 'asc') {\n                newOrder = 'desc';\n            } else {\n                newOrder = 'asc';\n            }\n        } else {\n            newSort = id;\n        }\n\n        onChangeSort(newSort, newOrder);\n    }, [sort, order, id, onChangeSort]);\n    const handleClearClick = useCallback((e) => {\n        e.stopPropagation();\n\n        onChangeSort('score', 'desc');\n    }, []);\n\n    return (\n        <th\n            className={styles.th}\n            onClick={handleClick}\n        >\n            {children}\n            {id === sort &&\n                <>\n                    <span\n                        className={styles.arrow}\n                    >\n                        {orderArrow[order]}\n                    </span>\n                    <span\n                        className={styles.clearSorting}\n                        onClick={handleClearClick}\n                    >\n                        ×\n                    </span>\n                </>\n            }\n        </th>\n    );\n};\n\nconst orderArrow = {\n    'desc': '⬇',\n    'asc': '⬆'\n};\n\nexport default THeader;\n","import React from 'react';\n\nimport styles from './Link.module.css';\n\ntype LinkT = React.HTMLProps<HTMLAnchorElement>;\n\nconst Link = ({\n    children,\n    ...props\n}: LinkT) => (\n    <a\n        className={styles.link}\n        {...props}\n    >\n        <span className={styles.body}>\n            {children}\n        </span>\n    </a>\n);\n\nexport default React.memo<LinkT>(Link);\n","import React from 'react';\nimport cx from 'classnames';\n\nimport styles from './Boolean.module.css';\n\ntype BooleanT = React.HTMLProps<HTMLSpanElement> & {\n    val: boolean\n};\n\nconst Boolean = ({\n    val,\n    ...props\n}: BooleanT) => (\n    <span\n        className={cx(styles.boolean, {\n            [styles.booleanPositive]: val,\n            [styles.booleanNegative]: !val\n        })}\n        {...props}\n    >\n        {val ? 'Yes': 'No'}\n    </span>\n);\n\nexport default React.memo<BooleanT>(Boolean);\n","import React from 'react';\nimport cx from 'classnames';\nimport numeral from 'numeral';\n\nimport styles from './Number.module.css';\n\ntype NumberT = React.HTMLProps<HTMLSpanElement> & {\n    val: number\n};\n\nconst Number = ({\n    val,\n    ...props\n}: NumberT) => (\n    <span\n        className={cx(styles.number, {\n            [styles.numberPositive]: val > 0,\n            [styles.numberNegative]: val < 0\n        })}\n        {...props}\n    >\n        {numeral(val).format('0,0')}\n    </span>\n);\n\nexport default React.memo<NumberT>(Number);\n","import React from 'react';\n\nimport styles from './Text.module.css';\n\n\ntype TextT = React.HTMLProps<HTMLDivElement>;\n\nconst Text = ({\n    children,\n    ...props\n}: TextT) => (\n    <div\n        className={styles.text}\n        {...props}\n    >\n        <span className={styles.body}>\n            {children}\n        </span>\n    </div>\n);\n\nexport default React.memo<TextT>(Text);\n","import React from 'react';\n\nimport Table from 'components/Table';\nimport THeader from 'components/Table/THeader';\nimport {\n    Link,\n    Boolean,\n    Number,\n    Text\n} from 'components/Table/Formatters';\n\nimport {\n    RepositoryI,\n    SortT,\n    OrderT\n} from 'reducer';\n\n\ntype PropsT = {\n    repositories: RepositoryI[],\n    sort: SortT,\n    order: OrderT,\n    onChangeSort: (sort: SortT, order: OrderT) => void\n};\n\nconst SearchResultTable = ({\n    repositories,\n    sort,\n    order,\n    onChangeSort\n}: PropsT) => (\n    <Table>\n        <thead>\n            <tr>\n                <THeader\n                    sort={sort}\n                    order={order}\n                    id=\"stars\"\n                    onChangeSort={onChangeSort}\n                >\n                    Stars\n                </THeader>\n                <th data-th-name>Name</th>\n                <th>Issues</th>\n                <THeader\n                    sort={sort}\n                    order={order}\n                    id=\"forks\"\n                    onChangeSort={onChangeSort}\n                >\n                    Forks\n                </THeader>\n                <th>Has wiki</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            {repositories.map(({\n                id,\n                stargazers_count,\n                name,\n                open_issues_count,\n                has_wiki,\n                forks_count,\n                html_url,\n                description\n            }) => (\n                <tr key={id}>\n                    <td>\n                        <Number\n                            val={stargazers_count}\n                        />\n                    </td>\n                    <td>\n                        <Link\n                            href={html_url}\n                        >\n                            {name}\n                        </Link>\n                    </td>\n                    <td data-hidden-on-small-screen>\n                        <Number\n                            val={open_issues_count}\n                        />\n                    </td>\n                    <td data-hidden-on-small-screen>\n                        <Number\n                            val={forks_count}\n                        />\n                    </td>\n                    <td data-hidden-on-small-screen>\n                        <Boolean\n                            val={has_wiki}\n                        />\n                    </td>\n                    <td data-hidden-on-small-screen>\n                        <Text>\n                            {description}\n                        </Text>\n                    </td>\n                </tr>\n            ))}\n        </tbody>\n    </Table>\n);\n\nexport default React.memo(SearchResultTable);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { useLocalStorageReducer } from 'react-storage-hooks';\n\nimport actionUtils from 'reducer/actionUtils';\nimport {\n    reducer,\n    SearchInitialState,\n    SortT,\n    OrderT\n} from 'reducer';\n\nimport Row from 'components/Row';\nimport Headline from 'components/Typography/Headline';\nimport Input from 'components/Input';\nimport Button from 'components/Button';\n\nimport SearchResultTable from './SearchResultTable';\n\nimport styles from './App.module.css';\nimport actions from 'reducer/actions';\n\n\nconst App = () => {\n    const [state, dispatch] = useLocalStorageReducer('search', reducer, SearchInitialState);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const handleFormSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (inputRef.current && !state.isFetching) {\n            const query = inputRef.current.value;\n\n            actionUtils.search(query, state.sort, state.order, dispatch);\n        }\n    }, [inputRef, state.isFetching, state.sort, state.order]);\n    const handleInputBlur = useCallback(() => handleQueryBlurEvent(inputRef.current, state.query), [inputRef, state.query]);\n    const hadnleLoadMoreClick = useCallback(() => actionUtils.loadMore(dispatch, state), [state.query, state.page]);\n    const handleSortChange = useCallback((sort: SortT, order: OrderT) => {\n        dispatch(actions.changeSorting(sort, order));\n        actionUtils.search(state.query, sort, order, dispatch);\n    }, [state.query]);\n\n    return (\n        <div className={styles.app}>\n            <Row>\n                <Headline>\n                    Repository Search\n                </Headline>\n            </Row>\n            <Row>\n                <form onSubmit={handleFormSubmit}>\n                    <Input\n                        ref={inputRef}\n                        defaultValue={state.query}\n                        onBlur={handleInputBlur}\n                        placeholder=\"Type anything here...\"\n                    />\n                    <button\n                        type=\"submit\"\n                        hidden\n                    ></button>\n                </form>\n            </Row>\n            {!!state.repositories.length &&\n                <Row>\n                    <SearchResultTable\n                        sort={state.sort}\n                        order={state.order}\n                        repositories={state.repositories}\n                        onChangeSort={handleSortChange}\n                    />\n                </Row>\n            }\n            <Row isCentered>\n                {state.isFetching &&\n                    <Button>\n                        Loading...\n                    </Button>\n                }\n                {!state.isFetching && state.repositories.length > 0 &&\n                    <Button onClick={hadnleLoadMoreClick}>\n                        Load more\n                    </Button>\n                }\n            </Row>\n        </div>\n    );\n}\n\nconst handleQueryBlurEvent = (inputRef: HTMLInputElement | null, query: string) => {\n    if (inputRef) {\n        const q = inputRef.value;\n\n        if (!q.trim()) {\n            inputRef.value = query;\n        }\n    }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'containers/app';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}